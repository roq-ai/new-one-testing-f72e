generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model employee_data {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String    @db.Uuid
  hotel_id   String    @db.Uuid
  position   String?   @db.VarChar(255)
  start_date DateTime? @db.Date
  end_date   DateTime? @db.Date
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  hotel      hotel     @relation(fields: [hotel_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user       user      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model hotel {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description   String?         @db.VarChar(255)
  name          String          @db.VarChar(255)
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @db.Timestamp(6)
  user_id       String          @db.Uuid
  tenant_id     String          @db.VarChar(255)
  employee_data employee_data[]
  user          user            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  menu          menu[]
}

model menu {
  id              String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String            @db.VarChar(255)
  description     String?           @db.VarChar(255)
  price           Int?
  availability    Boolean?
  hotel_id        String            @db.Uuid
  created_at      DateTime          @default(now()) @db.Timestamp(6)
  updated_at      DateTime          @default(now()) @db.Timestamp(6)
  hotel           hotel             @relation(fields: [hotel_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  menu_invitation menu_invitation[]
}

model menu_invitation {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  menu_id    String   @db.Uuid
  user_id    String   @db.Uuid
  status     String?  @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  menu       menu     @relation(fields: [menu_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model payroll {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  salary     Int
  bonus      Int?
  deductions Int?
  net_pay    Int?
  user_id    String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id              String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email           String            @unique @db.VarChar(255)
  firstName       String?           @db.VarChar(255)
  lastName        String?           @db.VarChar(255)
  roq_user_id     String            @db.VarChar(255)
  tenant_id       String            @db.VarChar(255)
  created_at      DateTime          @default(now()) @db.Timestamp(6)
  updated_at      DateTime          @default(now()) @db.Timestamp(6)
  employee_data   employee_data[]
  hotel           hotel[]
  menu_invitation menu_invitation[]
  payroll         payroll[]
}
